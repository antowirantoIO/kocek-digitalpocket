/* eslint-disable */
export default async () => {
    const t = {
        ["./common/api-key/constants/api-key.enum.constant"]: await import("./common/api-key/constants/api-key.enum.constant"),
        ["./modules/role/constants/role.enum.constant"]: await import("./modules/role/constants/role.enum.constant"),
        ["./modules/user/constants/user.enum.constant"]: await import("./modules/user/constants/user.enum.constant"),
        ["./common/aws/serializations/aws.s3.serialization"]: await import("./common/aws/serializations/aws.s3.serialization"),
        ["./common/aws/dtos/aws.ses.dto"]: await import("./common/aws/dtos/aws.ses.dto"),
        ["./modules/setting/constants/setting.enum.constant"]: await import("./modules/setting/constants/setting.enum.constant")
    };
    return { "@nestjs/swagger": { "models": [[import("./common/api-key/repository/entities/api-key.entity"), { "ApiKeyEntity": { type: { required: true, enum: t["./common/api-key/constants/api-key.enum.constant"].ENUM_API_KEY_TYPE }, name: { required: true, type: () => String }, key: { required: true, type: () => String }, hash: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, startDate: { required: false, type: () => Date }, endDate: { required: false, type: () => Date } } }], [import("./common/api-key/dtos/api-key.update.dto"), { "ApiKeyUpdateDateDto": { startDate: { required: true, type: () => Date }, endDate: { required: true, type: () => Date } }, "ApiKeyUpdateDto": { name: { required: true, type: () => String, maxLength: 50 } } }], [import("./common/api-key/dtos/api-key.create.dto"), { "ApiKeyCreateDto": { type: { required: true, enum: t["./common/api-key/constants/api-key.enum.constant"].ENUM_API_KEY_TYPE } }, "ApiKeyCreateRawDto": { key: { required: true, type: () => String, maxLength: 50 }, secret: { required: true, type: () => String, maxLength: 100 } } }], [import("./modules/role/repository/entities/role.entity"), { "RoleEntity": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, isActive: { required: true, type: () => Boolean }, type: { required: true, enum: t["./modules/role/constants/role.enum.constant"].ENUM_ROLE_TYPE }, permissions: { required: true, type: () => [Object] } } }], [import("./modules/user/repository/entities/user.entity"), { "UserEntity": { username: { required: false, type: () => String }, firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, mobileNumber: { required: false, type: () => String }, email: { required: true, type: () => String }, role: { required: true, type: () => String }, password: { required: true, type: () => String }, passwordExpired: { required: true, type: () => Date }, passwordCreated: { required: true, type: () => Date }, passwordAttempt: { required: true, type: () => Number }, signUpDate: { required: true, type: () => Date }, signUpFrom: { required: true, enum: t["./modules/user/constants/user.enum.constant"].ENUM_USER_SIGN_UP_FROM }, salt: { required: true, type: () => String }, isActive: { required: true, type: () => Boolean }, inactivePermanent: { required: true, type: () => Boolean }, inactiveDate: { required: false, type: () => Date }, blocked: { required: true, type: () => Boolean }, blockedDate: { required: false, type: () => Date }, photo: { required: false, type: () => t["./common/aws/serializations/aws.s3.serialization"].AwsS3Serialization } } }], [import("./modules/user/dtos/user.create.dto"), { "UserCreateDto": { email: { required: true, type: () => String, maxLength: 100 }, firstName: { required: true, type: () => String, minLength: 1, maxLength: 30 }, lastName: { required: true, type: () => String, minLength: 1, maxLength: 30 }, mobileNumber: { required: false, type: () => String, minLength: 10, maxLength: 14 }, role: { required: true, type: () => String }, password: { required: true, type: () => String, maxLength: 50 }, signUpFrom: { required: true, enum: t["./modules/user/constants/user.enum.constant"].ENUM_USER_SIGN_UP_FROM } } }], [import("./modules/user/dtos/user.import.dto"), { "UserImportDto": {} }], [import("./modules/user/dtos/user.update-name.dto"), { "UserUpdateNameDto": {} }], [import("./modules/user/dtos/user.update-password-attempt.dto"), { "UserUpdatePasswordAttemptDto": { passwordAttempt: { required: true, type: () => Number } } }], [import("./modules/user/dtos/user.update-username.dto"), { "UserUpdateUsernameDto": { username: { required: true, type: () => String, maxLength: 100 } } }], [import("./modules/role/dtos/role.update.dto"), { "RoleUpdateDto": { description: { required: true, type: () => String } } }], [import("./modules/role/dtos/role.create.dto"), { "RoleCreateDto": { name: { required: true, type: () => String, minLength: 3, maxLength: 30 }, type: { required: true, enum: t["./modules/role/constants/role.enum.constant"].ENUM_ROLE_TYPE }, permissions: { required: true, type: () => [RolePermissionsDto] } } }], [import("./modules/role/dtos/role.update-permission.dto"), { "RoleUpdatePermissionDto": {} }], [import("./common/aws/dtos/aws.ses.dto"), { "AwsSESCreateTemplateDto": { name: { required: true, type: () => String }, htmlBody: { required: false, type: () => String }, subject: { required: true, type: () => String }, plainTextBody: { required: false, type: () => String } }, "AwsSESUpdateTemplateDto": {}, "AwsSESGetTemplateDto": { name: { required: true, type: () => String } }, "AwsSESSendDto": { templateName: { required: true, type: () => String }, templateData: { required: false }, sender: { required: false, type: () => String }, replyTo: { required: false, type: () => String }, recipients: { required: true, type: () => [String] }, cc: { required: false, type: () => [String] }, bcc: { required: false, type: () => [String] } }, "AwsSESSendBulkRecipientsDto": { recipient: { required: true, type: () => String } }, "AwsSESSendBulkDto": { recipients: { required: true, type: () => [t["./common/aws/dtos/aws.ses.dto"].AwsSESSendBulkRecipientsDto] } } }], [import("./modules/email/dtos/email.send-sign-up.dto"), { "EmailSendSignUpDto": { name: { required: true, type: () => String }, appName: { required: true, type: () => String } } }], [import("./common/api-key/dtos/api-key.request.dto"), { "ApiKeyRequestDto": { apiKey: { required: true, type: () => String } } }], [import("./common/pagination/dtos/pagination.list.dto"), { "PaginationListDto": {} }], [import("./modules/role/dtos/role.request.dto"), { "RoleRequestDto": { role: { required: true, type: () => String } } }], [import("./modules/setting/repository/entities/setting.entity"), { "SettingEntity": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, type: { required: true, enum: t["./modules/setting/constants/setting.enum.constant"].ENUM_SETTING_DATA_TYPE }, value: { required: true, type: () => String } } }], [import("./modules/setting/dtos/setting.create.dto"), { "SettingCreateDto": { name: { required: true, type: () => String }, description: { required: false, type: () => String }, type: { required: true, enum: t["./modules/setting/constants/setting.enum.constant"].ENUM_SETTING_DATA_TYPE }, value: { required: true, type: () => String } } }], [import("./modules/setting/dtos/setting.update-value.dto"), { "SettingUpdateValueDto": {} }], [import("./modules/setting/dtos/setting.request.dto"), { "SettingRequestDto": { setting: { required: true, type: () => String } } }], [import("./modules/user/dtos/user.request.dto"), { "UserRequestDto": { user: { required: true, type: () => String } } }], [import("./common/file/dtos/file.single.dto"), { "FileSingleDto": { file: { required: true, type: () => Object } } }], [import("./modules/user/dtos/user.sign-up.dto"), { "UserSignUpDto": {} }], [import("./modules/user/dtos/user.change-password.dto"), { "UserChangePasswordDto": { newPassword: { required: true, type: () => String, maxLength: 50 }, oldPassword: { required: true, type: () => String } } }], [import("./modules/user/dtos/user.login.dto"), { "UserLoginDto": {} }], [import("./common/database/dtos/database.id.dto"), { "DatabaseIdDto": { _id: { required: false, type: () => String } } }], [import("./common/file/dtos/file.multiple.dto"), { "FileMultipleDto": { files: { required: true, type: () => [Object] } } }]], "controllers": [[import("./app/controllers/app.controller"), { "AppController": { "hello": { type: Object } } }], [import("./common/api-key/controllers/api-key.admin.controller"), { "ApiKeyAdminController": { "list": { type: Object }, "get": { type: Object }, "create": { type: Object }, "reset": { type: Object }, "updateName": { type: Object }, "inactive": {}, "active": {}, "updateDate": { type: Object }, "delete": {} } }], [import("./modules/role/controllers/role.admin.controller"), { "RoleAdminController": { "list": { type: Object }, "get": { type: Object }, "create": { type: Object }, "update": { type: Object }, "updatePermission": { type: Object }, "delete": {}, "inactive": {}, "active": {} } }], [import("./modules/setting/controllers/setting.admin.controller"), { "SettingAdminController": { "update": { type: Object } } }], [import("./modules/user/controllers/user.admin.controller"), { "UserAdminController": { "list": { type: Object }, "get": { type: Object }, "create": { type: Object }, "update": { type: Object }, "inactive": {}, "active": {}, "blocked": {}, "delete": {}, "import": {}, "export": { type: Object } } }], [import("./modules/user/controllers/user.user.controller"), { "UserUserController": { "deleteSelf": {} } }], [import("./health/controllers/health.public.controller"), { "HealthPublicController": { "checkAws": { type: Object }, "checkDatabase": { type: Object }, "checkMemoryHeap": { type: Object }, "checkMemoryRss": { type: Object }, "checkStorage": { type: Object } } }], [import("./modules/setting/controllers/setting.public.controller"), { "SettingPublicController": { "list": { type: Object }, "get": { type: Object }, "languages": { type: Object } } }], [import("./modules/user/controllers/user.public.controller"), { "UserPublicController": { "signUp": {} } }], [import("./modules/user/controllers/user.auth.controller"), { "UserAuthController": { "login": { type: Object }, "loginGoogle": { type: Object }, "refresh": { type: Object }, "changePassword": {}, "info": { type: Object }, "profile": { type: Object }, "updateProfile": {}, "claimUsername": {}, "upload": {} } }]] } };
};