name: cd

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run action'
        type: environment
        required: true
  # push:
  #   branches:
  #   - main

jobs:

  run-cd:
    runs-on: ubuntu-latest
    environment: github.event.inputs.environment
    # environment: main
    env: 
      APP_NAME: ack-nestjs-boilerplate-mongoose
      APP_NETWORK: app-network
      APP_PORT: 3000
      DOCKER: baibay


    strategy:
      matrix:
        node-version: ['17.x']

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Prepare
        run: |
          echo '::set-output name=github_short_sha::$(git rev-parse --short HEAD)'
          echo '::set-output name=app_name::${APP_NAME}'
          echo '::set-output name=app_network::${APP_NETWORK}'
          echo '::set-output name=app_port::${APP_PORT}'
          echo '::set-output name=docker::${DOCKER}'
        id: prepare

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/setup-buildx-action@v1
        id: builder

      - uses: docker/setup-buildx-action@v1
        id: main

      - name: Builder name
        run: echo ${{ steps.builder.outputs.name }}

      - name: Main builder name
        run: echo ${{ steps.main.outputs.name }}

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build against builder
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          file: ./prod/dockerfile
          target: builder

      - name: Build against main and push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.main.outputs.name }}
          file: ./prod/dockerfile
          target: main
          tags: |
            ${{ steps.prepare.outputs.docker }}/${{ steps.prepare.outputs.app_name }}:latest
            ${{ steps.prepare.outputs.docker }}/${{ steps.prepare.outputs.app_name }}:${{ steps.prepare.outputs.github_short_sha }}
          push: true
      
      - name: Deploy
        uses: fifsky/ssh-action@master
        with:
          command: |
            docker stop ${{ steps.prepare.outputs.app_name }} && docker rm ${{ steps.prepare.outputs.app_name }}
            docker network create ${{ steps.prepare.outputs.app_network }} --driver=bridge
            docker run run -itd \
              --hostname ${{ steps.prepare.outputs.app_name }} \
              --publish ${{ steps.prepare.outputs.app_port }}:${{ steps.prepare.outputs.app_port }} \
              --network ${{ steps.prepare.outputs.app_network }} \
              --volume /app/${{ steps.prepare.outputs.app_name }}/logs/:/app/logs/ \
              --volume /app/${{ steps.prepare.outputs.app_name }}/.env:/app/.env \
              --name ${{ steps.prepare.outputs.app_name }} ${{ steps.prepare.outputs.docker }}/${{ steps.prepare.outputs.app_name }}:${{ steps.prepare.outputs.github_short_sha }}
            docker ps -a
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}




