name: CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run action'
        type: environment
        required: true

jobs:
  run-cd:
    runs-on: ubuntu-latest
    environment: github.event.inputs.environment

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Prepare
        id: prepare
        run: echo "::set-output name=github_short_sha::$(git rev-parse --short HEAD)"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/setup-buildx-action@v1
        id: builder

      - uses: docker/setup-buildx-action@v1
        id: main

      - name: Builder name
        run: echo ${{ steps.builder.outputs.name }}

      - name: Main builder name
        run: echo ${{ steps.main.outputs.name }}

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build against builder
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          file: ./prod/dockerfile
          target: builder

      - name: Build against main and push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.main.outputs.name }}
          file: ./prod/dockerfile
          target: main
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ steps.prepare.outputs.github_short_sha }}
          push: true
      
      - name: Deploy
        uses: fifsky/ssh-action@master
        with:
          command: |
            docker stop ${{ secrets.APP_NAME }} && docker rm ${{ secrets.APP_NAME }}
            docker network create ${{ secrets.APP_NETWORK }} --driver=bridge
            docker run -itd \
              --hostname ${{ secrets.APP_NAME }} \
              --publish ${{ secrets.APP_PORT }}:${{ secrets.APP_PORT }} \
              --network ${{ secrets.APP_NETWORK }} \
              --volume /app/${{ secrets.APP_NAME }}/logs/:/app/logs/ \
              --volume /app/${{ secrets.APP_NAME }}/.env:/app/.env \
              --restart unless-stopped \
              --name ${{ secrets.APP_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ steps.prepare.outputs.github_short_sha }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}

      - name: Clean
        uses: fifsky/ssh-action@master
        continue-on-error: true
        with:
          command: |
            docker container prune --force
            docker rmi $(docker images **/${{ secrets.APP_NAME }} -q) --force
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          user: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY}}
