name: ci

on:
  push:
    branches:
    - main
    - development

jobs:

  run-linter: 
    runs-on: ubuntu-latest
    environment: main
    env:
      GITHUB_SHORT_SHA: ${GITHUB_SHA::8}

    strategy:
      matrix:
        node-version: ['17.x']

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Git short sha
        run: echo ${{ env.GITHUB_SHORT_SHA }}

      - name: Setup node version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Linter
        run: yarn lint

  run-test:
    runs-on: ubuntu-latest
    environment: main

    strategy:
      matrix:
        node-version: ['17.x']

    services:
      mongodb:
        image: mongo:latest
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Git short sha
        run: echo ${{ env.GITHUB_SHORT_SHA }}

      - name: Setup node version ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Linter
        run: yarn lint

      - name: Migration
        run: yarn migrate
          
      - name: Unit Test
        run: yarn test

      - name: Create env file
        run: |
          touch .env
          echo AWS_CREDENTIAL_KEY="$AWS_CREDENTIAL_KEY" >> .env
          echo AWS_CREDENTIAL_SECRET="$AWS_CREDENTIAL_SECRET" >> .env
          echo AWS_S3_BUCKET="$AWS_S3_BUCKET" >> .env
          echo AWS_S3_REGION="$AWS_S3_REGION" >> .env
        env:
          AWS_CREDENTIAL_KEY: ${{ secrets.AWS_CREDENTIAL_KEY }}
          AWS_CREDENTIAL_SECRET: ${{ secrets.AWS_CREDENTIAL_SECRET }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}

      - name: E2E Test
        run: yarn test:e2e

  run-ci:
    runs-on: ubuntu-latest
    environment: main

    strategy:
      matrix:
        node-version: ['17.x']

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Git short sha
        run: echo ${{ env.GITHUB_SHORT_SHA }}

      - uses: docker/setup-buildx-action@v1
        id: builder

      - uses: docker/setup-buildx-action@v1
        id: main

      - name: Builder name
        run: echo ${{ steps.builder.outputs.name }}

      - name: Main builder name
        run: echo ${{ steps.main.outputs.name }}

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build against builder
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          context: prod/dockerfile
          target: builder

      - name: Build against main
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.main.outputs.name }}
          context: prod/dockerfile
          target: main
          tags: |
            baibay/ack-nestjs-boilerplate-mongoose:latest
            baibay/ack-nestjs-boilerplate-mongoose:${{ env.GITHUB_SHORT_SHA }}
