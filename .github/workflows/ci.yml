name: CI
on:
  push:
    branches: 
    - development

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Check version changes
        uses: EndBug/version-check@v1
        id: check
        
      - name: "Print result 1"
        run: |
          echo "version: ${{ steps.check.outputs.version }}"
          echo "type: ${{ steps.check.outputs.type }}"
          echo "changed: ${{ steps.check.outputs.changed }}"
          echo "commit: ${{ steps.check.outputs.commit }}"

      - name: Version update detected
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

      - name: Get commit
        id: prepare
        run: echo "::set-output name=github_short_sha::$(git rev-parse --short HEAD)"

      - name: "Get latest version"
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: "release"
          view_top: 1

      - name: "Print result 2"
        run: |
          echo "id: ${{ steps.last_release.outputs.id }}"
          echo "name: ${{ steps.last_release.outputs.name }}"
          echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
          echo "created_at: ${{ steps.last_release.outputs.created_atd }}"
          echo "draft: ${{ steps.last_release.outputs.draft }}"
          echo "prerelease: ${{ steps.last_release.outputs.prerelease }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/setup-buildx-action@v1
        id: builder

      - uses: docker/setup-buildx-action@v1
        id: main

      - name: Builder name
        run: echo ${{ steps.builder.outputs.name }}

      - name: Main builder name
        run: echo ${{ steps.main.outputs.name }}

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build against builder
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          file: ./prod/dockerfile
          target: builder

      - name: Build against main and push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.main.outputs.name }}
          dockerfile: ./prod/dockerfile
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/ack-nestjs-boilerplate-mongoose
          target: main
          tags: |
            latest
            ${{ steps.last_release.outputs.tag_name }}
            ${{ steps.last_release.outputs.tag_name }}_sha-${{ steps.prepare.outputs.github_short_sha }}
          push: true



