version: '3.8'
services:
  boilerack:
    build: 
      context: .
      args:
        NODE_ENV: 'development'
    container_name: boilerack
    hostname: boilerack
    ports:
      - 3000:3000
    networks:
      - app-network
    volumes:
      - ./src/:/app/src/
      - .env/:/app/.env
    restart: always

  mongodb1:
    container_name: mongodb1
    hostname: mongodb1
    image: mongo:7.0.8
    restart: always
    ports:
      - "27017:27017"
    links:
      - mongodb2
      - mongodb3
    depends_on:
      mongodb2:
        condition: service_started
      mongodb3:
        condition: service_started
    networks:
      - app-network
    volumes:
      - mongodb_data1:/data/db
      - ./docker/rs-init.sh:/scripts/rs-init.sh
    command: mongod --bind_ip_all --replSet rs0 --port 27017
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--quiet",
        "127.0.0.1/test",
        "--eval",
        "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
      ]
      interval: 10s
      timeout: 30s
      retries: 5

  mongodb2:
    container_name: mongodb2
    hostname: mongodb2
    image: mongo:7.0.8
    networks:
      - app-network
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data2:/data/d
    command: mongod --bind_ip_all --replSet rs0 --port 27017
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--quiet",
        "127.0.0.1/test",
        "--eval",
        "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
      ]
      interval: 10s
      timeout: 30s
      retries: 5

  mongodb3:
    container_name: mongodb3
    hostname: mongodb3
    image: mongo:7.0.8
    networks:
      - app-network
    restart: always
    ports:
      - "27019:27017"
    volumes:
      - mongodb_data3:/data/db
    command: mongod --bind_ip_all --replSet rs0 --port 27017
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--quiet",
        "127.0.0.1/test",
        "--eval",
        "'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)'",
      ]
      interval: 10s
      timeout: 30s
      retries: 5

networks:
  app-network:
    name: app-network
    driver: bridge
    external: true

volumes:
  mongodb_data1:
    name: mongodb_data1
  mongodb_data2:
    name: mongodb_data2
  mongodb_data3:
    name: mongodb_data3
